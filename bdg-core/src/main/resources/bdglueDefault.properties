
bdglue.encoder.threads = 2
bdglue.encoder.class = bdglue2.encoder.JsonEncoder
bdglue.encoder.delimiter = 001
bdglue.encoder.tx-optype = true
bdglue.encoder.tx-optype-name = txoptype
bdglue.encoder.tx-timestamp = true
bdglue.encoder.tx-timestamp-name = txtimestamp
bdglue.encoder.tx-position = true
bdglue.encoder.tx-position-name = txposition
bdglue.encoder.user-token = true
bdglue.encoder.user-token-name = usertokens

# replace newline characters found in Strings
bdglue.encoder.replace-newline = false
# bdglue.encoder.newline-char defaults to " " (blank)
# set to another value if desired.

bdglue.event.header-optype = true
bdglue.event.header-timestamp = true
bdglue.event.header-rowkey = true
bdglue.event.header-avropath = false
bdglue.event.avro-hdfs-schema-path = hdfs:///user/flume/gg-data/avro-schema/
bdglue.event.generate-avro-schema = false
bdglue.event.avro-namespace = default
bdglue.event.avro-schema-path = ./gghadoop/avro

#
bdglue.publisher.class = bdglue2.publisher.console.ConsolePublisher
bdglue.publisher.threads = 2
bdglue.publisher.hash = rowkey

bdglue.kafka.topic = goldengate
bdglue.kafka.batchSize = 100
bdglue.kafka.flushFreq = 500
bdglue.kafka.metadata.broker.list = localhost:9092
bdglue.kafka.metadata.helper.class = bdglue2.publisher.kafka.KafkaMessageDefaultMeta

bdglue.kafka.serializer.class = kafka.serializer.DefaultEncoder
bdglue.kafka.key.serializer.class = kafka.serializer.StringEncoder
bdglue.kafka.request.required.acks = 1

bdglue.flume.host = localhost
bdglue.flume.port = 5000
bdglue.flume.rpc.retries = 5
bdglue.flume.rpc.retry-delay = 10



# replace special characters that are valid in RDBMS table/column
# names, but are not valid in hive/hbase/nosql/etc. names.
# Note that these are "schemadef" properties and not bdglue
# properties, but they are still specified in this file.
schemadef.replace.invalid_char = _
schemadef.replace.invalid_first_char = x
schemadef.replace.regex = [^a-zA-Z0-9_\\.]
    
    

    
